@model IEnumerable<EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
    // string viewData = @ViewData["message"];//error becouse view data is a dictionary obj must be casting to string
   // string viewData = @ViewData["message"]as string;//vaild

   // string viewBag = ViewBag.Message;//vaild becouse view bag it is a dynamic proerty type is detriment in runtime
}
@if (TempData["Message"] is not null)
{
    <div class="alert alert-success" id="MessageEmp">
        @TempData["Message"]
    </div>
}

 @* <div class="alert alert-success">
     @ViewData["message"]
  </div>*@
@*
<div class="alert alert-primary">
    @ViewBag.Message
</div>*@

<h1>All Employees</h1>
<br />
<br />

<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create Employee</a>

<br />
<br />

<div class="m-2">
    <form class="row">
        <div class="col-8">
            <input type="text" name="valueSearch" class="form-control" placeholder="Employee name" />
        </div>
        <div class="col-4">
            <input value="Search" type="submit" class="btn btn-primary" />
                 
        </div>
    </form>
</div>
@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
         <tr>
                <th>@Html.DisplayNameFor(E => E.Image)</th>

                <th>@Html.DisplayNameFor(E => E.Name)</th>
                <th>@Html.DisplayNameFor(E => E.Age)</th>

                <th>@Html.DisplayNameFor(E => E.Address)</th>

                <th>@Html.DisplayNameFor(E => E.Salary)</th>
                <th>@Html.DisplayNameFor(E => E.Department)</th>


                <th>@Html.DisplayNameFor(E => E.Email)</th>
                <th>@Html.DisplayNameFor(E => E.PhoneNumber)</th>
                <th>@Html.DisplayNameFor(E => E.HireDate)</th>
                <th>@Html.DisplayNameFor(E => E.IsActiv)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
         </tr>



        </thead>
        <tbody>
            @foreach(var emp in Model)
            {
                @*E:\Backend-Rout\MVC\MyDemo\MVCProject\MVCProject.PL\wwwroot\Files\Images\17b7d69f-e555-4405-9fdd-90e3ad2d32901596658115058.jpg*@
                <tr>
                    <td>
                        <img src="~\Files\Images\@emp.ImageName" class="rounded" width="40" height="40" />
                    </td>
                    <td>@emp.Name</td>
                    <td>@emp.Age</td>

                    <td>@emp.Address</td>

                    <td>@Html.DisplayFor(E=>emp.Salary)</td>
                    <td>@Html.DisplayFor(E => emp.Department.Name)</td>


                    <td>@Html.DisplayFor(E => emp.Email)</td>

                    <td>@emp.PhoneNumber</td>
                    <td>@emp.HireDate</td>

                    <td>@Html.DisplayFor(E => emp.IsActiv)</td>
                    <partial name="_ButtonPartialView" model="@emp.Id" />

                </tr>


                
            }
        </tbody>
    </table>
    
}
else
{
    <div class="mt-4 alert alert-warning">
        <h4>There is No Employee :</h4>
    </div>
}




